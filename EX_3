import java.util.ArrayList;
import java.util.InputMismatchException;

public class SetOfStacks {

    private int lengOfStack, numOfStack = 0;
    private ArrayList<ArrayList<Integer>> arr = new ArrayList<>();

    public SetOfStacks(int lengOfStack) {
        this.lengOfStack = lengOfStack;
        arr.add(new ArrayList<Integer>());
    }

    public void push(int val) {
        if(arr.get(numOfStack).size() >= lengOfStack) {
            arr.add(new ArrayList<>());
            numOfStack++;
        }
        arr.get(numOfStack).add(val);
    }
    public void pop() {
        arr.get(numOfStack).remove(arr.get(numOfStack).size()-1);
        if(arr.get(numOfStack).size() == 0) {
            arr.remove(numOfStack);
            numOfStack--;
        }
    }
    public void popAt(int index) {
        if(index > numOfStack) return;
        arr.get(index).remove(arr.get(index).size()-1);
        if(arr.get(index).size() == 0) {
            arr.remove(index);
            numOfStack--;
        }
    }
    public int get(int StackIndex, int valIndex) {
        if(StackIndex > numOfStack || StackIndex < 0) {
            throw new InputMismatchException();
        }
        if(arr.get(StackIndex).size() < valIndex || valIndex < 0) {
            throw new InputMismatchException();
        }
        return arr.get(StackIndex).get(valIndex);
    }
    public int getLengOfStacks() {
        return lengOfStack;
    }
    public int getNumOfStacks() {
        return numOfStack+1;
    }

}

